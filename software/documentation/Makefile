# Makefile para generaci√≥n de hojas de datos
# M√©todo optimizado con generate_professional_pdf.py √∫nicamente

.PHONY: all professional pdf clean help install install-minimal

# Variables
README = README.md
BUILD_DIR = build

# Comando por defecto - versi√≥n profesional optimizada
all: professional

# M√©todo PROFESIONAL optimizado (√∫nico m√©todo disponible)
professional:
	@echo "üèÜ Generando hoja de datos PROFESIONAL..."
	@mkdir -p $(BUILD_DIR)
	@python generate_professional_pdf.py
	@echo "‚úÖ Listo! Calidad profesional con im√°genes de hardware/resources/"

# Generar PDF directamente con Chrome
pdf:
	@echo "üìÑ Generando PDF con Chrome..."
	@mkdir -p $(BUILD_DIR)
	@python generate_professional_pdf.py
	@if command -v google-chrome-stable >/dev/null 2>&1; then \
		echo "üîß Convirtiendo HTML a PDF con Chrome..."; \
		cd $(BUILD_DIR) && google-chrome-stable --headless --disable-gpu --print-to-pdf=datasheet.pdf --no-margins --print-to-pdf-no-header datasheet_professional.html; \
		echo "‚úÖ PDF generado: $(BUILD_DIR)/datasheet.pdf"; \
	elif command -v chromium-browser >/dev/null 2>&1; then \
		echo "üîß Convirtiendo HTML a PDF con Chromium..."; \
		cd $(BUILD_DIR) && chromium-browser --headless --disable-gpu --print-to-pdf=datasheet.pdf --no-margins --print-to-pdf-no-header datasheet_professional.html; \
		echo "‚úÖ PDF generado: $(BUILD_DIR)/datasheet.pdf"; \
	else \
		echo "‚ö†Ô∏è Chrome/Chromium no encontrado. Solo HTML disponible."; \
		echo "üìÑ HTML disponible: $(BUILD_DIR)/datasheet_professional.html"; \
	fi

# Instalar dependencias m√≠nimas
install:
	@echo "üì¶ Instalando dependencias m√≠nimas..."
	@pip install -r requirements.txt
	@echo "‚úÖ Dependencias instaladas (markdown2, PyYAML, Pillow)"

# Limpiar archivos generados
clean:
	@echo "üßπ Limpiando archivos generados..."
	@rm -rf $(BUILD_DIR)
	@echo "‚úÖ Limpieza completada"

# Generar y abrir autom√°ticamente
open: professional
	@echo "üåê Abriendo hoja de datos profesional..."
	@python -c "import webbrowser, os; webbrowser.open('file://' + os.path.abspath('build/datasheet_professional.html'))"

# Verificar que README.md existe
check:
	@if [ ! -f $(README) ]; then \
		echo "‚ùå Error: $(README) no encontrado"; \
		exit 1; \
	fi
	@echo "‚úÖ $(README) encontrado"

# Mostrar informaci√≥n de ayuda
help:
	@echo "üõ†Ô∏è GENERADOR DE HOJAS DE DATOS - OPTIMIZADO"
	@echo "==========================================="
	@echo ""
	@echo "Comandos disponibles:"
	@echo "  make professional    - Genera hoja PROFESIONAL (HTML) ‚≠ê"
	@echo "  make pdf             - Genera hoja + PDF con Chrome"
	@echo "  make open            - Genera y abre en navegador"
	@echo "  make install         - Instala dependencias m√≠nimas"
	@echo "  make clean           - Limpia archivos generados"
	@echo "  make check           - Verifica que README.md existe"
	@echo "  make help            - Muestra esta ayuda"
	@echo ""
	@echo "‚≠ê RECOMENDADO:"
	@echo "  make professional    (ultra-r√°pido, < 0.1 segundos)"
	@echo ""
	@echo "üöÄ Caracter√≠sticas:"
	@echo "  - Solo 3 dependencias Python"
	@echo "  - Sin Sphinx, sin LaTeX"
	@echo "  - Im√°genes autom√°ticas desde hardware/"
	@echo "  - Escalado uniforme TOP/BOTTOM view"
	@echo "  - Saltos de p√°gina optimizados"
	@echo "  - Compatible con GitHub Pages"
